diff -urN areafix.orig/Makefile areafix/Makefile
--- areafix.orig/Makefile	2003-12-15 12:44:13.000000000 +0300
+++ areafix/Makefile	2007-01-27 16:19:16.000000000 +0300
@@ -24,7 +24,7 @@
 endif
 
 SRC_DIR = src/
-H_DIR   = areafix/
+H_DIR   = areafix
 TARGETLIB = $(LIBPREFIX)$(LIBNAME)$(_LIB)
 TARGETDLL = $(LIBPREFIX)$(LIBNAME)$(_DLL)
 
@@ -53,7 +53,7 @@
   else
 $(TARGETDLL).$(VER): $(OBJS)
 	$(CC) -shared -Wl,-soname,$(TARGETDLL).$(VERH) \
-          -o $(TARGETDLL).$(VER) $(OBJS)
+          -L$(LIBDIR) -lhusky -lfidoconfig -lsmapi -o $(TARGETDLL).$(VER) $(OBJS)
   endif
 
 instdyn: $(TARGETLIB) $(TARGETDLL).$(VER)
diff -urN areafix.orig/src/areafix.c areafix/src/areafix.c
--- areafix.orig/src/areafix.c	2007-01-27 11:41:12.000000000 +0300
+++ areafix/src/areafix.c	2007-01-27 11:42:30.000000000 +0300
@@ -131,7 +131,7 @@
 }
 
 char *list(s_listype type, s_link *link, char *cmdline) {
-    unsigned int cnt, i, j, export, import, mandatory, active, avail, rc = 0;
+    unsigned int cnt, i, j, h_export, h_import, mandatory, active, avail, rc = 0;
     char *report = NULL;
     char *list = NULL;
     char *pattern = NULL;
@@ -172,11 +172,11 @@
              || (type == lt_unlinked && rc == 1)
            ) { /*  add line */
 
-            import = export = 1; mandatory = 0;
+            h_import = h_export = 1; mandatory = 0;
             for (j = 0; j < area->downlinkCount; j++) {
                if (addrComp(link->hisAka, area->downlinks[j]->link->hisAka) == 0) {
-                  import = area->downlinks[j]->import;
-                  export = area->downlinks[j]->export;
+                  h_import = area->downlinks[j]->h_import;
+                  h_export = area->downlinks[j]->h_export;
                   mandatory = area->downlinks[j]->mandatory;
                   break;
                }
@@ -187,12 +187,12 @@
                 /* if matches pattern and not reversed (or vise versa) */
                 if (patimat(area->areaName, pattern)!=reversed)
                 {
-                    addAreaListItem(al,rc==0, getLinkRescanAccess(area, link), import, export, mandatory, area->areaName,area->description,area->group);
+                    addAreaListItem(al,rc==0, getLinkRescanAccess(area, link), h_import, h_export, mandatory, area->areaName,area->description,area->group);
                     if (rc==0) active++; avail++;
                 }
             } else
             {
-                addAreaListItem(al,rc==0, getLinkRescanAccess(area, link), import, export, mandatory, area->areaName,area->description,area->group);
+                addAreaListItem(al,rc==0, getLinkRescanAccess(area, link), h_import, h_export, mandatory, area->areaName,area->description,area->group);
                 if (rc==0) active++; avail++;
             }
 	} /* end add line */
@@ -2722,14 +2722,14 @@
                         if(af_config->readOnly[k].areaMask[0] != '!') {
                             if (patimat(areas[i].areaName, af_config->readOnly[k].areaMask) &&
                                 patmat(toAka, af_config->readOnly[k].addrMask)) {
-                                    arealink->import = 0;
+                                    arealink->h_import = 0;
                             }
                         } else {
                             exclMask = af_config->readOnly[k].areaMask;
                             exclMask++;
                             if (patimat(areas[i].areaName, exclMask) &&
                                 patmat(toAka, af_config->readOnly[k].addrMask)) {
-                                    arealink->import = 1;
+                                    arealink->h_import = 1;
                             }
                         }
                     }
@@ -2740,22 +2740,22 @@
                         if(af_config->writeOnly[k].areaMask[0] != '!') {
                             if (patimat(areas[i].areaName, af_config->writeOnly[k].areaMask) &&
                                 patmat(toAka, af_config->writeOnly[k].addrMask)) {
-                                    arealink->export = 0;
+                                    arealink->h_export = 0;
                             }
                         } else {
                             exclMask = af_config->writeOnly[k].areaMask;
                             exclMask++;
                             if (patimat(areas[i].areaName, exclMask) &&
                                 patmat(toAka, af_config->writeOnly[k].addrMask)) {
-                                    arealink->export = 1;
+                                    arealink->h_export = 1;
                             }
                         }
                     }
                 }
 
-                if ((arealink->export == 0) || (arealink->import == 0)) {
+                if ((arealink->h_export == 0) || (arealink->h_import == 0)) {
                     w_log(LL_AREAFIX, "%s: Link %s will not have full access (export=%s import=%s) to %s %s, skipped",
-                           af_robot->name, toAka, arealink->export?"on":"off", arealink->import?"on":"off", af_robot->strA, areas[i].areaName);
+                           af_robot->name, toAka, arealink->h_export?"on":"off", arealink->h_import?"on":"off", af_robot->strA, areas[i].areaName);
                     continue;
                 }
 
diff -urN areafix.orig/src/query.c areafix/src/query.c
--- areafix.orig/src/query.c	2007-01-27 11:41:12.000000000 +0300
+++ areafix/src/query.c	2007-01-27 11:42:30.000000000 +0300
@@ -1263,9 +1263,9 @@
     arealink = getAreaLink(area, aka);
     if (arealink) {
 	if (type==0) {
-	    if (!arealink->import) writeAccess = BM_DENY_IMPORT;
+	    if (!arealink->h_import) writeAccess = BM_DENY_IMPORT;
 	} else {
-	    if (!arealink->export) writeAccess = BM_DENY_IMPORT;
+	    if (!arealink->h_export) writeAccess = BM_DENY_IMPORT;
 	}
     } else {
 	if (addrComp(aka, *area->useAka)!=0) writeAccess = BM_NOT_LINKED;
