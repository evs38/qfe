diff -urN fidoconf.orig/fidoconf/fidoconf.h fidoconf/fidoconf/fidoconf.h
--- fidoconf.orig/fidoconf/fidoconf.h	2006-12-21 10:14:08.000000000 +0300
+++ fidoconf/fidoconf/fidoconf.h	2006-12-21 10:40:25.000000000 +0300
@@ -113,7 +113,7 @@
    char    *command;
 } s_execonfile, *ps_execonfile;
 
-typedef enum flavour {normal=1, hold, crash, direct, immediate, /*the last one:*/undef=0} e_flavour;
+typedef enum flavour {f_normal=1, hold, crash, direct, immediate, /*the last one:*/undef=0} e_flavour;
 typedef enum pollType {PKT, REQUEST, FLOFILE} e_pollType;
 typedef enum _forward {fOff, fOn, fSecure} e_forward;
 typedef enum emptypktpwd {eOff, eSecure, eOn} e_emptypktpwd;
@@ -195,7 +195,7 @@
                                  /*  bundle. Default 100 (used in bsopack) */
     unsigned int packNetmail;    /*  allows to pack outbound */
                                  /*  netmail. Default no (used in bsopack) */
-    unsigned int export, import, mandatory, manual; /*  Default link's options */
+    unsigned int n_export, n_import, mandatory, manual; /*  Default link's options */
     char **optGrp; /*  groups for this options */
     unsigned int numOptGrp;
     unsigned int delNotReceivedTIC; /* 1 - if file not recieved, then remove TIC */
@@ -249,8 +249,8 @@
 
 typedef struct arealink {
    ps_link link;
-   unsigned int export;		/*  1 - export yes, 0 - export no */
-   unsigned int import;		/*  1 - import yes, 0 - import no */
+   unsigned int n_export;		/*  1 - export yes, 0 - export no */
+   unsigned int n_import;		/*  1 - import yes, 0 - import no */
    unsigned int mandatory;	/*  1 - mandatory yes, 0 - mandatory no */
    unsigned int manual;		/*  1 - manual yes, 0 - manual no */
    unsigned int rescan;         /*  1 - rescan yes, 0 - rescan no */
@@ -339,7 +339,7 @@
    ps_area      area;     /*  area to copy messages */
    hs_addr       addr;     /*  from addr to compare */
    char         *areaName;/*  name of area to copy messages */
-   int          export;   /*  export copied msg? */
+   int          n_export;   /*  export copied msg? */
    int          netMail;  /*  do this in netmail, not echomail */
    int          move;	  /*  move (not copy) original msg */
    int          extspawn; /*  areaName is name of external program to exec */
diff -urN fidoconf.orig/src/afixcmd.c fidoconf/src/afixcmd.c
--- fidoconf.orig/src/afixcmd.c	2005-03-13 22:03:43.000000000 +0300
+++ fidoconf/src/afixcmd.c	2006-12-21 10:46:42.000000000 +0300
@@ -458,14 +458,14 @@
                 if(config->readOnly[i].areaMask[0] != '!') {
                     if (patimat(area->areaName, config->readOnly[i].areaMask) &&
                         patmat(aka2str(link->hisAka), config->readOnly[i].addrMask)) {
-                            arealink->import = 0;
+                            arealink->n_import = 0;
                     }
                 } else {
                     ExclMask = config->readOnly[i].areaMask;
                     ExclMask++;
                     if (patimat(area->areaName, ExclMask) &&
                         patmat(aka2str(link->hisAka), config->readOnly[i].addrMask)) {
-                            arealink->import = 1;
+                            arealink->n_import = 1;
                     }
                 }
             }
@@ -476,14 +476,14 @@
                 if(config->writeOnly[i].areaMask[0] != '!') {
                     if (patimat(area->areaName, config->writeOnly[i].areaMask) &&
                         patmat(aka2str(link->hisAka), config->writeOnly[i].addrMask)) {
-                            arealink->export = 0;
+                            arealink->n_export = 0;
                     }
                 } else {
                     ExclMask = config->writeOnly[i].areaMask;
                     ExclMask++;
                     if (patimat(area->areaName, ExclMask) &&
                         patmat(aka2str(link->hisAka), config->writeOnly[i].addrMask)) {
-                            arealink->export = 1;
+                            arealink->n_export = 1;
                     }
                 }
             }
diff -urN fidoconf.orig/src/common.c fidoconf/src/common.c
--- fidoconf.orig/src/common.c	2006-12-21 10:14:09.000000000 +0300
+++ fidoconf/src/common.c	2006-12-21 10:41:41.000000000 +0300
@@ -316,7 +316,7 @@
 		   break;
 	   case immediate : xstrcat(&name, "i");
 		   break;
-	   case normal :    xstrcat(&name, (typ==PKT) ? "o" : "f");
+	   case f_normal :  xstrcat(&name, (typ==PKT) ? "o" : "f");
 		   break;
 	   default :    xstrcat(&name, (typ==PKT) ? "o" : "f");
 		   break;
diff -urN fidoconf.orig/src/fidoconf.c fidoconf/src/fidoconf.c
--- fidoconf.orig/src/fidoconf.c	2006-12-21 10:14:09.000000000 +0300
+++ fidoconf/src/fidoconf.c	2006-12-21 10:42:57.000000000 +0300
@@ -293,7 +293,7 @@
 		   if (stricmp(cbaName, aptr->areaName)==0) {
 		       found++;
 		       cb->area = aptr;
-		       cb->export = 1;
+		       cb->n_export = 1;
 		       cb->netMail = 0;
 		   }
 	       }
@@ -302,7 +302,7 @@
 		   if (stricmp(cbaName, aptr->areaName)==0) {
 		       found++;
 		       cb->area = aptr;
-		       cb->export = 0;
+		       cb->n_export = 0;
 		       cb->netMail = 0;
 		   }
 	       }
@@ -311,7 +311,7 @@
 		   if (stricmp(cbaName, aptr->areaName)==0) {
 		       found++;
 		       cb->area = aptr;
-		       cb->export = 0;
+		       cb->n_export = 0;
 		       cb->netMail = 1;
 		   }
 	       }
@@ -332,7 +332,7 @@
 	   cb->areaName = (char *) smalloc(sstrlen(config->badArea.areaName)+i+1);
 	   if (i) *cb->areaName='*';
 	   strcpy(cb->areaName+i,config->badArea.areaName);
-	   cb->export = 0;
+	   cb->n_export = 0;
 	 } else {
 	   printf("Could not find area \"%s\" for carbon copy and BadArea not defined. Can't use this area for carbon copy\n", cb->areaName);
            cb->area = NULL;
@@ -360,7 +360,7 @@
                         for (nalink=0, dlink=aptr->downlinks; nalink < aptr->downlinkCount; nalink++, dlink++) {
                             if (patmat (aka2str((*dlink)->link->hisAka),
                                 config->readOnly[i].addrMask)) {
-                                (*dlink)->import = 0;
+                                (*dlink)->n_import = 0;
                             }
                         }
                     }
@@ -373,7 +373,7 @@
                         for (nalink=0, dlink=aptr->downlinks; nalink < aptr->downlinkCount; nalink++, dlink++) {
                             if (patmat (aka2str((*dlink)->link->hisAka),
                                 config->readOnly[i].addrMask)) {
-                                (*dlink)->import = 1;
+                                (*dlink)->n_import = 1;
                             }
                         }
                     }
@@ -390,7 +390,7 @@
                         for (nalink=0, dlink=aptr->downlinks; nalink < aptr->downlinkCount; nalink++, dlink++) {
                             if (patmat (aka2str((*dlink)->link->hisAka),
                                 config->writeOnly[i].addrMask)) {
-                                (*dlink)->export = 0;
+                                (*dlink)->n_export = 0;
                             }
                         }
                     }
@@ -403,7 +403,7 @@
                         for (nalink=0, dlink=aptr->downlinks; nalink < aptr->downlinkCount; nalink++, dlink++) {
                             if (patmat (aka2str((*dlink)->link->hisAka),
                                 config->writeOnly[i].addrMask)) {
-                                (*dlink)->export = 1;
+                                (*dlink)->n_export = 1;
                             }
                         }
                     }
@@ -515,8 +515,8 @@
                clink->areafix.on = 1;
                clink->filefix.on = 1;
                clink->filefix.autoCreate = 1; /* needed for hpucode + htick */
-               clink->export = 0;         /* do not export anything to virtual link */
-               clink->import = 1;
+               clink->n_export = 0;         /* do not export anything to virtual link */
+               clink->n_import = 1;
                clink->maxUnpackedNetmail = 100;
                memcpy ( &(clink->hisAka), &(config->addr[i]), sizeof(hs_addr));
                clink->ourAka = &(config->addr[i]);
diff -urN fidoconf.orig/src/line.c fidoconf/src/line.c
--- fidoconf.orig/src/line.c	2006-12-21 10:14:09.000000000 +0300
+++ fidoconf/src/line.c	2006-12-21 10:46:06.000000000 +0300
@@ -626,21 +626,21 @@
     
     if (link->numOptGrp > 0) {
         /*  default set export on, import on, mandatory off, manual off */
-        arealink->export = 1;
-        arealink->import = 1;
+        arealink->n_export = 1;
+        arealink->n_import = 1;
         arealink->mandatory = 0;
         arealink->manual = 0;
         
         if (grpInArray(area->group,link->optGrp,link->numOptGrp)) {
-            arealink->export = link->export;
-            arealink->import = link->import;
+            arealink->n_export = link->n_export;
+            arealink->n_import = link->n_import;
             arealink->mandatory = link->mandatory;
             arealink->manual = link->manual;
         }
         
     } else {
-        arealink->export = link->export;
-        arealink->import = link->import;
+        arealink->n_export = link->n_export;
+        arealink->n_import = link->n_import;
         arealink->mandatory = link->mandatory;
         arealink->manual = link->manual;
     }
@@ -649,25 +649,25 @@
 
     if (area->mandatory) arealink->mandatory = 1;
     if (area->manual) arealink->manual = 1;
-    if ((area->levelread > link->level) || ((link->Pause & area->areaType) && (!area->noPause))) arealink->export = 0;
-    if (area->levelwrite > link->level) arealink->import = 0;
+    if ((area->levelread > link->level) || ((link->Pause & area->areaType) && (!area->noPause))) arealink->n_export = 0;
+    if (area->levelwrite > link->level) arealink->n_import = 0;
 
     if (area->group) {
         if (link->numAccessGrp) {
             if (config->numPublicGroup) {
                 if (!grpInArray(area->group,link->AccessGrp,link->numAccessGrp) &&
                     !grpInArray(area->group,config->PublicGroup,config->numPublicGroup)) {
-                    arealink->export = 0;
-                    arealink->import = 0;
+                    arealink->n_export = 0;
+                    arealink->n_import = 0;
                 }
             } else if (!grpInArray(area->group,link->AccessGrp,link->numAccessGrp)) {
-                arealink->export = 0;
-                arealink->import = 0;
+                arealink->n_export = 0;
+                arealink->n_import = 0;
             }
         } else if (config->numPublicGroup) {
             if (!grpInArray(area->group,config->PublicGroup,config->numPublicGroup)) {
-                arealink->export = 0;
-                arealink->import = 0;
+                arealink->n_export = 0;
+                arealink->n_import = 0;
             }
         }
     }
@@ -1219,8 +1219,8 @@
         return 1;
     }
     iToken = strLower(sstrdup(token));
-    if (strcmp(iToken, "r")==0) alink->import = 0;
-    else if (strcmp(iToken, "w")==0) alink->export = 0;
+    if (strcmp(iToken, "r")==0) alink->n_import = 0;
+    else if (strcmp(iToken, "w")==0) alink->n_export = 0;
     else if (strcmp(iToken, "mn")==0) alink->mandatory = 1;
     else if (strcmp(iToken, "def")==0) alink->defLink = 1;
     else {
@@ -1869,8 +1869,8 @@
       clink->filefix.on = 1;
 
       /*  set defaults to export, import, mandatory (0), manual (0) */
-      clink->export = 1;
-      clink->import = 1;
+      clink->n_export = 1;
+      clink->n_import = 1;
       clink->ourAka = &(config->addr[0]);
 
       /*  set default maxUnpackedNetmail */
@@ -2088,7 +2088,7 @@
   while (option != NULL) {
     iOption = strLower(sstrdup(option));
 	if (strcmp(iOption, "hold")==0) actualRoute->flavour = hold;
-    else if (strcmp(iOption, "normal")==0) actualRoute->flavour = normal;
+    else if (strcmp(iOption, "normal")==0) actualRoute->flavour = f_normal;
     else if (strcmp(iOption, "crash")==0) actualRoute->flavour = crash;
     else if (strcmp(iOption, "direct")==0) actualRoute->flavour = direct;
     else if (strcmp(iOption, "immediate")==0) actualRoute->flavour = immediate;
@@ -2448,7 +2448,7 @@
 
   iLine = strLower(sstrdup(line));
   if (strcmp(iLine, "hold")==0) *flavour = hold;
-  else if (strcmp(iLine, "normal")==0) *flavour = normal;
+  else if (strcmp(iLine, "normal")==0) *flavour = f_normal;
   else if (strcmp(iLine, "direct")==0) *flavour = direct;
   else if (strcmp(iLine, "crash")==0) *flavour = crash;
   else if (strcmp(iLine, "immediate")==0) *flavour = immediate;
@@ -3149,8 +3149,8 @@
       config->linkDefaults->filefix.on = 1;
 
       /*  set defaults to export, import, mandatory (0), manual (0) */
-      config->linkDefaults->export = 1;
-      config->linkDefaults->import = 1;
+      config->linkDefaults->n_export = 1;
+      config->linkDefaults->n_import = 1;
       config->linkDefaults->ourAka = &(config->addr[0]);
 
       /*  set defaults maxUnpackedNetmail */
@@ -4058,14 +4058,14 @@
             break;
         case ID_EXPORT:
             if( (clink = getDescrLink(config)) != NULL ) {
-                rc = parseBool (getRestOfLine(), &clink->export);
+                rc = parseBool (getRestOfLine(), &clink->n_export);
             } else {
                 rc = 1;
             }
             break;
         case ID_IMPORT:
             if( (clink = getDescrLink(config)) != NULL ) {
-                rc = parseBool (getRestOfLine(), &clink->import);
+                rc = parseBool (getRestOfLine(), &clink->n_import);
             } else {
                 rc = 1;
             }
diff -urN fidoconf.orig/src/tparser.c fidoconf/src/tparser.c
--- fidoconf.orig/src/tparser.c	2006-12-21 10:14:09.000000000 +0300
+++ fidoconf/src/tparser.c	2006-12-21 10:48:46.000000000 +0300
@@ -412,19 +412,19 @@
        printf("\t");
        printAddr(&(area.downlinks[i]->link->hisAka));
        printf(" level %d,", area.downlinks[i]->link->level);
-/*       printf(" exp. %s,", (area.downlinks[i]->export) ? "on" : "off");
-       printf(" imp. %s,", (area.downlinks[i]->import) ? "on" : "off");*/
-       if(area.downlinks[i]->export || area.downlinks[i]->import)
+/*       printf(" exp. %s,", (area.downlinks[i]->n_export) ? "on" : "off");
+       printf(" imp. %s,", (area.downlinks[i]->n_import) ? "on" : "off");*/
+       if(area.downlinks[i]->n_export || area.downlinks[i]->n_import)
            printf(" "); else printf(" no access");
-       if(area.downlinks[i]->export)
+       if(area.downlinks[i]->n_export)
            printf("read");
-       if(area.downlinks[i]->export && area.downlinks[i]->import)
+       if(area.downlinks[i]->n_export && area.downlinks[i]->n_import)
            printf("/");
-       if(area.downlinks[i]->import)
+       if(area.downlinks[i]->n_import)
            printf("write");
-       if(area.downlinks[i]->export && area.downlinks[i]->rescan)
+       if(area.downlinks[i]->n_export && area.downlinks[i]->rescan)
            printf("/rescan");
-       if((area.downlinks[i]->export + area.downlinks[i]->import)==1)
+       if((area.downlinks[i]->n_export + area.downlinks[i]->n_import)==1)
            printf(" only");
        printf(",");
        printf(" defLink %s,", (area.downlinks[i]->defLink) ? "on" : "off");
@@ -492,19 +492,19 @@
        printf("\t");
        printAddr(&(area.downlinks[i]->link->hisAka));
        printf(" level %d,", area.downlinks[i]->link->level);
-       if(area.downlinks[i]->export || area.downlinks[i]->import)
+       if(area.downlinks[i]->n_export || area.downlinks[i]->n_import)
            printf(" "); else printf(" no access");
-       if(area.downlinks[i]->export)
+       if(area.downlinks[i]->n_export)
            printf("receive");
-       if(area.downlinks[i]->export && area.downlinks[i]->import)
+       if(area.downlinks[i]->n_export && area.downlinks[i]->n_import)
            printf("/");
-       if(area.downlinks[i]->import)
+       if(area.downlinks[i]->n_import)
            printf("send");
-       if((area.downlinks[i]->export + area.downlinks[i]->import)==1)
+       if((area.downlinks[i]->n_export + area.downlinks[i]->n_import)==1)
            printf(" only");
        printf(",");
-/*       printf(" export %s,", (area.downlinks[i]->export) ? "on" : "off");
-       printf(" import %s,", (area.downlinks[i]->import) ? "on" : "off");    */
+/*       printf(" export %s,", (area.downlinks[i]->n_export) ? "on" : "off");
+       printf(" import %s,", (area.downlinks[i]->n_import) ? "on" : "off");    */
        printf(" mandatory %s", (area.downlinks[i]->mandatory) ? "on" : "off");
        if (area.downlinks[i]->defLink) printf("; this is (default) uplink.\n");
        else printf(".\n");
@@ -576,7 +576,7 @@
 {
    switch (flavour) {
       case hold:      return "hold";
-      case normal:    return "normal";
+      case f_normal:  return "normal";
       case direct:    return "direct";
       case crash:     return "crash";
       case immediate: return "immediate";
@@ -638,8 +638,8 @@
    if (link->emailFrom) printf("emailFrom:  %s\n", link->emailFrom);
    if (link->emailSubj) printf("emailSubj:  %s\n", link->emailSubj);
    printf("Level:      %u\n", link->level);
-   printf("Export:     %s\n",(link->export) ? "on" : "off");
-   printf("Import:     %s\n",(link->import) ? "on" : "off");
+   printf("Export:     %s\n",(link->n_export) ? "on" : "off");
+   printf("Import:     %s\n",(link->n_import) ? "on" : "off");
    printf("Mandatory:  %s\n",(link->mandatory) ? "on" : "off");
 
    printf("AvailList: ");
@@ -1179,7 +1179,7 @@
         }
         putchar('\n');
         if (cb->reason) printf("CarbonReason:   %s\n", cb->reason);
-        if (cb->export) printf("Copied messages will be exported.\n");
+        if (cb->n_export) printf("Copied messages will be exported.\n");
         if (cb->netMail) printf("Active on netMail\n");
         if(cb->areaName!=NULL)
             if (*cb->areaName=='*') printf("CarbonAndQuit ignored.\n");
