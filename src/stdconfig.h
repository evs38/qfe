#ifndef _QEMBED_1804289383
#define _QEMBED_1804289383
static const unsigned int  archive_tpl_len = 32;
static const unsigned char archive_tpl_data[] = {
    0x4d,0x65,0x73,0x73,0x61,0x67,0x65,0x20,0x66,0x72,0x6f,0x6d,0x20,0x40,
    0x6f,0x72,0x69,0x67,0x61,0x72,0x65,0x61,0x40,0x3a,0x0a,0x0a,0x40,0x74,
    0x65,0x78,0x74,0x40
};

/* Generated by qembed */
static const unsigned int  clipboard_tpl_len = 53;
static const unsigned char clipboard_tpl_data[] = {
    0x3d,0x3d,0x3d,0x20,0x43,0x6c,0x69,0x70,0x62,0x6f,0x61,0x72,0x64,0x20,
    0x62,0x65,0x67,0x69,0x6e,0x20,0x3d,0x3d,0x3d,0x0a,0x40,0x74,0x65,0x78,
    0x74,0x40,0x0a,0x3d,0x3d,0x3d,0x20,0x43,0x6c,0x69,0x70,0x62,0x6f,0x61,
    0x72,0x64,0x20,0x65,0x6e,0x64,0x20,0x3d,0x3d,0x3d,0x0a
};

static const unsigned int  confirm_tpl_len = 145;
static const unsigned char confirm_tpl_data[] = {
    0x0a,0x20,0x59,0x6f,0x75,0x72,0x20,0x6d,0x65,0x73,0x73,0x61,0x67,0x65,
    0x20,0x77,0x69,0x74,0x68,0x20,0x73,0x75,0x62,0x6a,0x65,0x63,0x74,0x3a,
    0x20,0x40,0x6f,0x72,0x69,0x67,0x73,0x75,0x62,0x6a,0x40,0x2c,0x0a,0x77,
    0x72,0x69,0x74,0x74,0x65,0x6e,0x20,0x61,0x74,0x20,0x40,0x6f,0x72,0x69,
    0x67,0x64,0x61,0x74,0x65,0x40,0x20,0x40,0x6f,0x72,0x69,0x67,0x74,0x69,
    0x6d,0x65,0x40,0x20,0x74,0x6f,0x20,0x40,0x6f,0x72,0x69,0x67,0x74,0x6f,
    0x40,0x0a,0x68,0x61,0x73,0x20,0x73,0x75,0x63,0x65,0x73,0x73,0x66,0x75,
    0x6c,0x6c,0x79,0x20,0x72,0x65,0x61,0x64,0x20,0x62,0x79,0x20,0x53,0x79,
    0x73,0x4f,0x70,0x20,0x6f,0x6e,0x20,0x40,0x6f,0x72,0x69,0x67,0x74,0x6f,
    0x61,0x64,0x64,0x72,0x40,0x2e,0x0a,0x40,0x63,0x75,0x72,0x73,0x6f,0x72,
    0x40,0x0a,0x2d,0x2d,0x2d
};

static const unsigned int  forward_tpl_len = 362;
static const unsigned char forward_tpl_data[] = {
    0x48,0x65,0x6c,0x6c,0x6f,0x2c,0x20,0x2a,0x40,0x74,0x6f,0x6e,0x61,0x6d,
    0x65,0x40,0x2a,0x20,0x21,0x0a,0x0a,0x3d,0x5b,0x46,0x57,0x44,0x20,0x42,
    0x65,0x67,0x69,0x6e,0x5d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,
    0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,
    0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,
    0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,
    0x3d,0x0a,0x3d,0x20,0x41,0x72,0x65,0x61,0x3a,0x20,0x40,0x6f,0x72,0x69,
    0x67,0x61,0x72,0x65,0x61,0x40,0x20,0x28,0x40,0x6f,0x72,0x69,0x67,0x61,
    0x72,0x65,0x61,0x64,0x65,0x73,0x63,0x40,0x29,0x0a,0x3d,0x20,0x46,0x72,
    0x6f,0x6d,0x3a,0x20,0x40,0x6f,0x72,0x69,0x67,0x66,0x72,0x6f,0x6d,0x40,
    0x20,0x28,0x40,0x6f,0x72,0x69,0x67,0x66,0x72,0x6f,0x6d,0x61,0x64,0x64,
    0x72,0x40,0x29,0x0a,0x3d,0x20,0x54,0x6f,0x20,0x20,0x3a,0x20,0x40,0x6f,
    0x72,0x69,0x67,0x74,0x6f,0x40,0x0a,0x3d,0x20,0x53,0x75,0x62,0x6a,0x3a,
    0x20,0x40,0x6f,0x72,0x69,0x67,0x73,0x75,0x62,0x6a,0x40,0x0a,0x3d,0x3d,
    0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,
    0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,
    0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,
    0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,
    0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x0a,0x40,0x74,0x65,0x78,0x74,0x40,0x0a,
    0x3d,0x5b,0x46,0x57,0x44,0x20,0x45,0x6e,0x64,0x5d,0x3d,0x3d,0x3d,0x3d,
    0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,
    0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,
    0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,
    0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x0a,0x40,0x63,0x75,0x72,0x73,
    0x6f,0x72,0x40,0x0a,0x0a,0x42,0x79,0x65,0x2c,0x20,0x2a,0x40,0x74,0x6f,
    0x6e,0x61,0x6d,0x65,0x40,0x2a,0x20,0x21,0x0a,0x2d,0x2d,0x2d
};

static const unsigned int  message_tpl_len = 95;
static const unsigned char message_tpl_data[] = {
    0x48,0x65,0x6c,0x6c,0x6f,0x2c,0x20,0x2a,0x40,0x74,0x6f,0x6e,0x61,0x6d,
    0x65,0x40,0x2a,0x20,0x21,0x0a,0x0a,0x40,0x63,0x75,0x72,0x73,0x6f,0x72,
    0x40,0x0a,0x0a,0x42,0x79,0x65,0x2c,0x20,0x2a,0x40,0x74,0x6f,0x6e,0x61,
    0x6d,0x65,0x40,0x2a,0x20,0x21,0x0a,0x2e,0x2e,0x2e,0x20,0x48,0x6f,0x73,
    0x74,0x20,0x40,0x68,0x6f,0x73,0x74,0x6e,0x61,0x6d,0x65,0x40,0x20,0x77,
    0x6f,0x72,0x6b,0x20,0x75,0x6e,0x64,0x65,0x72,0x20,0x40,0x70,0x6c,0x61,
    0x74,0x66,0x6f,0x72,0x6d,0x40,0x2e,0x0a,0x2d,0x2d,0x2d
};

static const unsigned int  reply_tpl_len = 161;
static const unsigned char reply_tpl_data[] = {
    0x48,0x65,0x6c,0x6c,0x6f,0x2c,0x20,0x2a,0x40,0x74,0x6f,0x6e,0x61,0x6d,
    0x65,0x40,0x2a,0x20,0x21,0x0a,0x0a,0x40,0x6f,0x72,0x69,0x67,0x64,0x61,
    0x74,0x65,0x40,0x20,0x40,0x6f,0x72,0x69,0x67,0x74,0x69,0x6d,0x65,0x40,
    0x2c,0x20,0x40,0x6f,0x72,0x69,0x67,0x66,0x72,0x6f,0x6d,0x40,0x20,0x77,
    0x72,0x6f,0x74,0x65,0x20,0x74,0x6f,0x20,0x40,0x6f,0x72,0x69,0x67,0x74,
    0x6f,0x40,0x3a,0x0a,0x0a,0x40,0x71,0x75,0x6f,0x74,0x65,0x74,0x65,0x78,
    0x74,0x40,0x0a,0x40,0x63,0x75,0x72,0x73,0x6f,0x72,0x40,0x0a,0x0a,0x42,
    0x79,0x65,0x2c,0x20,0x2a,0x40,0x74,0x6f,0x6e,0x61,0x6d,0x65,0x40,0x2a,
    0x20,0x21,0x0a,0x2e,0x2e,0x2e,0x20,0x48,0x6f,0x73,0x74,0x20,0x40,0x68,
    0x6f,0x73,0x74,0x6e,0x61,0x6d,0x65,0x40,0x20,0x77,0x6f,0x72,0x6b,0x20,
    0x75,0x6e,0x64,0x65,0x72,0x20,0x40,0x70,0x6c,0x61,0x74,0x66,0x6f,0x72,
    0x6d,0x40,0x2e,0x0a,0x2d,0x2d,0x2d
};

static const unsigned int  save_htm_tpl_len = 573;
static const unsigned char save_htm_tpl_data[] = {
    0x3c,0x3f,0x78,0x6d,0x6c,0x20,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x3d,
    0x22,0x31,0x2e,0x30,0x22,0x20,0x65,0x6e,0x63,0x6f,0x64,0x69,0x6e,0x67,
    0x3d,0x22,0x55,0x54,0x46,0x2d,0x38,0x22,0x3f,0x3e,0x0a,0x3c,0x21,0x44,
    0x4f,0x43,0x54,0x59,0x50,0x45,0x20,0x68,0x74,0x6d,0x6c,0x20,0x50,0x55,
    0x42,0x4c,0x49,0x43,0x20,0x22,0x2d,0x2f,0x2f,0x57,0x33,0x43,0x2f,0x2f,
    0x44,0x54,0x44,0x20,0x58,0x48,0x54,0x4d,0x4c,0x20,0x31,0x2e,0x30,0x20,
    0x54,0x72,0x61,0x6e,0x73,0x69,0x74,0x69,0x6f,0x6e,0x61,0x6c,0x2f,0x2f,
    0x45,0x4e,0x22,0x20,0x22,0x68,0x74,0x74,0x70,0x3a,0x2f,0x2f,0x77,0x77,
    0x77,0x2e,0x77,0x33,0x2e,0x6f,0x72,0x67,0x2f,0x54,0x52,0x2f,0x78,0x68,
    0x74,0x6d,0x6c,0x31,0x2f,0x44,0x54,0x44,0x2f,0x78,0x68,0x74,0x6d,0x6c,
    0x31,0x2d,0x74,0x72,0x61,0x6e,0x73,0x69,0x74,0x69,0x6f,0x6e,0x61,0x6c,
    0x2e,0x64,0x74,0x64,0x22,0x3e,0x0a,0x3c,0x68,0x74,0x6d,0x6c,0x20,0x78,
    0x6d,0x6c,0x6e,0x73,0x3d,0x22,0x68,0x74,0x74,0x70,0x3a,0x2f,0x2f,0x77,
    0x77,0x77,0x2e,0x77,0x33,0x2e,0x6f,0x72,0x67,0x2f,0x31,0x39,0x39,0x39,
    0x2f,0x78,0x68,0x74,0x6d,0x6c,0x22,0x20,0x78,0x6d,0x6c,0x3a,0x6c,0x61,
    0x6e,0x67,0x3d,0x22,0x65,0x6e,0x22,0x3e,0x0a,0x20,0x20,0x3c,0x68,0x65,
    0x61,0x64,0x3e,0x0a,0x20,0x20,0x20,0x20,0x3c,0x6d,0x65,0x74,0x61,0x20,
    0x68,0x74,0x74,0x70,0x2d,0x65,0x71,0x75,0x69,0x76,0x3d,0x22,0x43,0x6f,
    0x6e,0x74,0x65,0x6e,0x74,0x2d,0x54,0x79,0x70,0x65,0x22,0x20,0x63,0x6f,
    0x6e,0x74,0x65,0x6e,0x74,0x3d,0x22,0x74,0x65,0x78,0x74,0x2f,0x68,0x74,
    0x6d,0x6c,0x3b,0x20,0x63,0x68,0x61,0x72,0x73,0x65,0x74,0x3d,0x75,0x74,
    0x66,0x2d,0x38,0x22,0x20,0x2f,0x3e,0x0a,0x20,0x20,0x20,0x20,0x3c,0x6d,
    0x65,0x74,0x61,0x20,0x6e,0x61,0x6d,0x65,0x3d,0x22,0x67,0x65,0x6e,0x65,
    0x72,0x61,0x74,0x6f,0x72,0x22,0x20,0x63,0x6f,0x6e,0x74,0x65,0x6e,0x74,
    0x3d,0x22,0x40,0x70,0x72,0x6f,0x64,0x75,0x63,0x74,0x40,0x2f,0x40,0x70,
    0x6c,0x61,0x74,0x66,0x6f,0x72,0x6d,0x40,0x20,0x40,0x76,0x65,0x72,0x73,
    0x69,0x6f,0x6e,0x40,0x22,0x20,0x2f,0x3e,0x0a,0x20,0x20,0x20,0x20,0x3c,
    0x74,0x69,0x74,0x6c,0x65,0x3e,0x51,0x46,0x45,0x20,0x2d,0x20,0x53,0x61,
    0x76,0x65,0x64,0x20,0x4d,0x65,0x73,0x73,0x61,0x67,0x65,0x3c,0x2f,0x74,
    0x69,0x74,0x6c,0x65,0x3e,0x0a,0x20,0x20,0x3c,0x2f,0x68,0x65,0x61,0x64,
    0x3e,0x0a,0x3c,0x62,0x6f,0x64,0x79,0x3e,0x0a,0x41,0x72,0x65,0x61,0x3a,
    0x20,0x40,0x6f,0x72,0x69,0x67,0x61,0x72,0x65,0x61,0x40,0x20,0x28,0x40,
    0x6f,0x72,0x69,0x67,0x61,0x72,0x65,0x61,0x64,0x65,0x73,0x63,0x40,0x29,
    0x3c,0x62,0x72,0x3e,0x0a,0x46,0x72,0x6f,0x6d,0x3a,0x20,0x40,0x6f,0x72,
    0x69,0x67,0x66,0x72,0x6f,0x6d,0x40,0x20,0x28,0x40,0x6f,0x72,0x69,0x67,
    0x66,0x72,0x6f,0x6d,0x61,0x64,0x64,0x72,0x40,0x29,0x3c,0x62,0x72,0x3e,
    0x0a,0x54,0x6f,0x20,0x20,0x3a,0x20,0x40,0x6f,0x72,0x69,0x67,0x74,0x6f,
    0x40,0x3c,0x62,0x72,0x3e,0x0a,0x53,0x75,0x62,0x6a,0x3a,0x20,0x40,0x6f,
    0x72,0x69,0x67,0x73,0x75,0x62,0x6a,0x40,0x3c,0x62,0x72,0x3e,0x0a,0x3c,
    0x68,0x72,0x3e,0x0a,0x40,0x74,0x65,0x78,0x74,0x40,0x0a,0x3c,0x2f,0x62,
    0x6f,0x64,0x79,0x3e,0x0a,0x3c,0x2f,0x68,0x74,0x6d,0x6c,0x3e,0x0a
};

static const unsigned int  save_txt_tpl_len = 352;
static const unsigned char save_txt_tpl_data[] = {
    0x3d,0x5b,0x51,0x46,0x45,0x20,0x2d,0x20,0x53,0x61,0x76,0x65,0x64,0x20,
    0x4d,0x65,0x73,0x73,0x61,0x67,0x65,0x20,0x42,0x65,0x67,0x69,0x6e,0x5d,
    0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,
    0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,
    0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,
    0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x0a,0x3d,0x20,0x41,0x72,0x65,
    0x61,0x3a,0x20,0x40,0x6f,0x72,0x69,0x67,0x61,0x72,0x65,0x61,0x40,0x20,
    0x28,0x40,0x6f,0x72,0x69,0x67,0x61,0x72,0x65,0x61,0x64,0x65,0x73,0x63,
    0x40,0x29,0x0a,0x3d,0x20,0x46,0x72,0x6f,0x6d,0x3a,0x20,0x40,0x6f,0x72,
    0x69,0x67,0x66,0x72,0x6f,0x6d,0x40,0x20,0x28,0x40,0x6f,0x72,0x69,0x67,
    0x66,0x72,0x6f,0x6d,0x61,0x64,0x64,0x72,0x40,0x29,0x0a,0x3d,0x20,0x54,
    0x6f,0x20,0x20,0x3a,0x20,0x40,0x6f,0x72,0x69,0x67,0x74,0x6f,0x40,0x0a,
    0x3d,0x20,0x53,0x75,0x62,0x6a,0x3a,0x20,0x40,0x6f,0x72,0x69,0x67,0x73,
    0x75,0x62,0x6a,0x40,0x0a,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,
    0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,
    0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,
    0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,
    0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,
    0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x0a,
    0x40,0x74,0x65,0x78,0x74,0x40,0x0a,0x3d,0x5b,0x53,0x61,0x76,0x65,0x64,
    0x20,0x4d,0x65,0x73,0x73,0x61,0x67,0x65,0x20,0x45,0x6e,0x64,0x5d,0x3d,
    0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,
    0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,
    0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,
    0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,0x3d,
    0x3d,0x0a
};

static const unsigned int  unsubscribe_tpl_len = 23;
static const unsigned char unsubscribe_tpl_data[] = {
    0x2d,0x40,0x6f,0x72,0x69,0x67,0x61,0x72,0x65,0x61,0x40,0x40,0x63,0x75,
    0x72,0x73,0x6f,0x72,0x40,0x0a,0x2d,0x2d,0x2d
};

static const unsigned int  kludges_lst_len = 18;
static const unsigned char kludges_lst_data[] = {
    0x4c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x3a,0x20,0x57,0x6f,0x72,0x6c,
    0x64,0x20,0x3b,0x29
};

static const unsigned int  origin_lst_len = 55;
static const unsigned char origin_lst_data[] = {
    0x51,0x46,0x45,0x20,0x2d,0x20,0x47,0x55,0x49,0x20,0x46,0x69,0x64,0x6f,
    0x6e,0x65,0x74,0x20,0x45,0x64,0x69,0x74,0x6f,0x72,0x20,0x66,0x6f,0x72,
    0x20,0x57,0x69,0x6e,0x64,0x6f,0x77,0x73,0x2c,0x20,0x4c,0x69,0x6e,0x75,
    0x78,0x20,0x61,0x6e,0x64,0x20,0x4d,0x61,0x63,0x4f,0x53,0x21,0x0a
};

#include <qcstring.h>
#include <qdict.h>
static struct Embed {
    unsigned int size;
    const unsigned char *data;
    const char *name;
} embed_vec[] = {
    { 32, archive_tpl_data, "archive.tpl" },
    { 53, clipboard_tpl_data, "clipboard.tpl" },
    { 145, confirm_tpl_data, "confirm.tpl" },
    { 362, forward_tpl_data, "forward.tpl" },
    { 95, message_tpl_data, "message.tpl" },
    { 161, reply_tpl_data, "reply.tpl" },
    { 573, save_htm_tpl_data, "save_htm.tpl" },
    { 352, save_txt_tpl_data, "save_txt.tpl" },
    { 23, unsubscribe_tpl_data, "unsubscribe.tpl" },
    { 18, kludges_lst_data, "kludges.lst" },
    { 55, origin_lst_data, "origin.lst" },
    { 0, 0, 0 }
};

static const QByteArray& qembed_findData( const char* name )
{
    static QDict<QByteArray> dict;
    QByteArray* ba = dict.find( name );
    if ( !ba ) {
	for ( int i = 0; embed_vec[i].data; i++ ) {
	    if ( strcmp(embed_vec[i].name, name) == 0 ) {
		ba = new QByteArray;
		ba->setRawData( (char*)embed_vec[i].data,
				embed_vec[i].size );
		dict.insert( name, ba );
		break;
	    }
	}
	if ( !ba ) {
	    static QByteArray dummy;
	    return dummy;
	}
    }
    return *ba;
}

#endif
